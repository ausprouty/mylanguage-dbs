<?php
/*

<Input>

		<g id="ye" class="landxx coastxx ye">
		<title>Pakistan</title>
		<path id="pk-" class="landxx pk" d="m 1750.28,440.19 c 3.18,0.715 6.09,2.275 9.2,3.207 3.7,1.11 6.68,-0.04 10.38,-0.109 1.31,-0.03 2.42,0.505 3.69,0.691 1.3,0.191 2.21,-0.736 3.36,-1.153 1.51,-0.55 2.93,0.07 4.44,0 1.27,-0.06 2.47,-0.716 3.71,-1 1.43,-0.331 4.22,-0.57 5.13,-1.916 0.54,-0.803 -0.75,-1.239 -0.6,-2.017 0.37,-1.89 -0.51,-3.415 -0.33,-5.256 0.19,-1.866 0.55,-1.445 1.65,-2.549 0.68,-0.678 0.85,-1.809 1.75,-2.278 0.93,-0.491 1.25,0.503 2.16,0.608 1.55,0.18 2.92,-0.313 4.27,-1.036 -0.56,-0.583 -1.57,-0.62 -1.8,-1.512 1.33,-0.02 2.71,-0.859 3.42,-1.947 0.84,-1.286 2.92,0.901 2.99,-0.717 0.99,0.466 1.4,0.246 2.01,1.28 0.51,0.873 1.31,0.575 2.02,0.05 1.88,-1.415 1.41,-4.026 0.65,-5.894 -0.48,-1.199 0.46,-1.386 0.72,-2.418 0.2,-0.806 0.22,-2.031 -0.1,-2.819 -0.35,-0.937 0.64,-1.101 1.3,-1.249 1.1,-0.246 1.68,0.124 2.68,-0.679 1.23,-0.978 1.19,-1.028 0.69,-2.237 -0.42,-1.01 -1.01,-2.121 -1.96,-2.721 -1.86,-1.178 -2.15,-2.87 0.46,-2.159 1.77,0.484 6.07,1.058 6.56,-1.47 0.14,-0.746 0.13,-1.305 -0.45,-1.81 -0.25,-0.216 -1.37,-0.94 -1.15,-1.386 0.19,-0.197 0.43,-0.279 0.72,-0.246 -0.33,-0.716 0.25,-1.266 0.65,-1.767 0.36,-0.462 1.65,-1.518 1.65,-2.085 0,-0.538 0.18,-1.016 0.52,-1.433 0.26,-0.369 -0.65,-0.743 -0.77,-0.979 -0.1,-0.262 0,-0.456 0.21,-0.581 0.4,-0.424 -0.29,-1.283 -0.4,-1.681 -0.16,-0.53 -1.07,-1.788 -1.43,-2.245 -0.53,-0.657 -1.38,-1.099 -2.01,-1.644 -0.86,-0.74 1.72,-3.906 2.56,-3.646 1.14,0.357 1.23,-0.896 1.91,-1.583 0.72,-0.727 1.66,-1.194 2.62,-1.499 2.08,-0.655 4.3,-0.661 6.46,-0.745 1.09,-0.04 2.61,-0.612 3.62,-0.107 0.99,0.495 1.07,0.771 1.98,0.09 1.25,-0.93 4.37,-2.479 5.25,-0.33 0.89,-1.597 3.2,-0.285 3.91,0.799 0.65,1.002 2.45,0.455 3.5,1.433 0.74,0.694 1.23,1.483 1.49,2.466 0.18,0.713 0.11,1.936 0.39,2.548 0.3,0.668 1.83,1.576 2.41,2.09 0.73,0.663 1.72,-0.447 2.41,-0.624 0.13,3.102 7.29,4.139 9.77,3.598 -0.66,0.743 -4.92,2.743 -4.58,3.742 0.15,0.454 -1.21,1.674 -0.67,1.232 0.29,-0.236 -0.78,0.619 -1.09,1.105 -0.3,0.488 -4.7,1.072 -5.47,1.606 -2.19,1.518 -4.13,0.324 -6.7,-0.217 -2.08,-0.435 -4.64,-1.821 -6.65,-0.579 -1.37,0.845 -2.29,2.75 -0.56,3.48 1.59,0.668 -0.61,1.61 0.7,2.029 0.44,0.138 3.39,0.01 2.25,1.138 -1.04,1.021 -2.39,1.745 -0.45,2.909 1.81,1.09 -0.49,2.591 0.44,3.684 0.55,0.653 1.48,1.011 2.15,1.514 0.31,0.199 0.54,0.474 0.53,0.837 0,0.757 0.27,0.842 1.36,1.018 2.11,0.34 1.04,2.222 2.96,2.636 1.09,0.234 3.13,0.446 3.91,1.363 0.96,1.128 -2.09,2.229 -2.7,2.513 -1.56,0.725 -3.37,2.162 -1.77,3.741 1.17,1.151 -0.42,4.226 1.61,4.269 -0.2,0.829 -1.61,1.485 -2.38,2.41 -0.97,1.163 -3.19,3.511 -2.12,4.392 1.93,1.594 -1.68,2.489 -2.46,2.877 -0.86,0.431 -0.86,1.858 -0.99,2.68 -0.23,1.395 -0.61,2.831 -1.24,4.103 -0.94,1.892 -2.54,2.146 -3.87,3.597 -0.54,0.584 -0.79,1.622 -0.86,2.393 -0.12,1.361 -1.58,2.188 -2.06,3.389 -1.03,2.551 -2.53,1.731 -4.96,2.379 -0.82,0.221 -1.76,1.071 -2.65,0.984 -1.07,-0.104 -1.56,-1.396 -2.09,-2.142 -1.24,-1.748 -3.1,0.905 -3.59,1.998 -0.86,1.938 -2.26,3.6 -3.04,5.505 -0.96,2.346 0.36,3.658 2.6,4.221 2.09,0.524 3.12,0.633 2.92,3.191 -0.11,1.462 -0.39,4.733 2.12,4.76 0.73,0 1.56,-0.518 2.2,0.06 0.64,0.578 0.12,2.152 0.69,2.961 1.16,1.663 2.44,2.907 2.98,4.958 0.21,0.786 0.66,0.551 -0.11,1.099 -0.61,0.437 0.4,1.893 0.91,1.997 -1.36,1.027 -2.78,2.313 -3.93,0.39 -0.53,-0.894 -1.35,-0.225 -2.02,0.05 -0.34,0.09 -0.68,0.208 -1.01,0.337 -0.54,0.28 -0.2,0.958 -0.78,1.208 -1.94,0.82 -4.12,-1.049 -6.15,-0.938 -1.09,0.06 -2.53,0.251 -3.54,-0.25 0.1,0.797 0.77,3.024 -0.67,3.024 -1.22,0 -3.09,0.03 -3,1.728 -0.1,-0.984 -0.2,-0.96 -0.36,0.07 -0.48,-0.418 -0.8,-0.992 -1.15,-1.512 0.26,0.452 0.33,0.933 0.21,1.439 -0.53,-0.327 -0.98,-0.735 -1.37,-1.224 0.33,1.318 -0.71,0.575 -1.51,1.008 0,-0.384 0,-0.769 0,-1.152 -0.87,0.629 -1.99,-0.559 -1,-1.151 -1.17,0.221 -2.83,-1.49 -1.59,-2.448 -1.37,-0.787 -0.63,-3.055 -1.76,-3.622 -0.64,-0.316 -3.85,-0.454 -3.76,-1.48 0.18,-2.076 -0.29,-2.689 -1.32,-4.331 -0.76,-1.218 -3.05,-2.471 -3.45,-0.287 1.24,-0.06 2.06,-1.163 2.73,0.504 -1.32,-0.852 -2.8,-0.327 -4.16,0.102 -1.42,0.447 -2.78,-0.05 -4.12,0.358 -0.73,0.22 -5.84,0.15 -4.53,1.556 -0.59,0.178 -0.98,-0.103 -1.01,-0.72 -1.97,1.02 -3.54,-1.929 -4.61,-1.44 0.17,0.242 0.33,0.482 0.5,0.721 -0.99,0.203 -5.06,-1.104 -4.03,1.296 -1.03,-0.527 -8.82,-1.104 -8.14,0.863 -0.52,-0.02 -0.93,-0.783 -1.35,-1.025 -0.74,-0.419 -0.74,0.569 -1.19,0.832 -1.81,1.054 -3.13,-0.143 -3.07,-1.742 0.1,-2.155 -0.43,-9.946 3.74,-9.008 -1.22,-3.214 6.18,-1.473 6.54,-3.237 0.16,-0.77 0.44,-3.703 0.11,-3.963 -0.78,-0.626 -1.83,-0.172 -2.72,-0.229 -1.28,-0.08 -1.09,-2.188 -1.12,-3.052 -0.1,-1.663 -0.58,-3.8 -1.11,-5.391 -0.24,-0.736 -1.53,-0.782 -2.18,-1.184 -1.08,-0.665 -2.19,-1.067 -3.33,-1.596 -2.53,-1.172 -3.57,-2.886 -4.85,-5.225 -1.37,-2.481 -3.55,-4.455 -5.52,-6.438"/>
		<path id="xj" class="limitxx pk xj" d="m 1837.1232,410.7484 c -0.6011,-1.35251 -0.9699,-2.16011 -0.7214,-3.06276 -0.294,-1.90612 0.046,-1.614 -0.7767,-3.24203 -0.2867,-0.82912 -0.3205,-2.18185 -1,-2.78894 -0.712,-1.0656 -0.4333,-1.7121 -0.3783,-2.61333 0.6844,-0.15636 1.4356,-0.24246 2.045,-0.071 0.5,-0.68155 -0.038,-1.35159 0.7413,-1.80982 0.3565,-0.98567 1.5794,-0.39868 2.2545,-0.90707 0.6905,-0.20975 -1.2336,-0.79032 -1.0035,-1.37355 0.4974,-0.2952 -0.5807,-1.04339 0.4615,-1.20237 0.3256,0.18357 0.9007,0.15485 1.2765,0.45891 0.3641,0.33737 0.7256,-0.30806 1.0226,-0.0992 0.6673,0.0771 1.3373,-0.89097 1.9747,-0.37301 0.4662,0.47123 0.9319,1.02883 0.9108,1.72568 0.059,0.78873 1.3717,0.2473 1.6934,1.03288 0.7841,0.18492 1.702,0.99077 2.3916,0.44582 0.3474,-0.56645 0.6139,0.62324 1.2515,-0.23161 1.5763,-0.0753 1.0921,2.11599 0.7682,2.84472 -0.5291,0.0698 -0.9039,-0.29142 -1.8092,-0.37146 -0.8593,-0.2479 -1.0276,-0.10573 -2.0692,-0.42673 -1.0043,-0.23107 -1.2761,-0.38157 -2.2418,-0.6418 -0.8784,-0.14143 -0.9412,-0.31375 -1.9886,-0.45636 -0.9103,0.12396 -0.7901,0.16412 -1.7358,0.21609 -1.4892,0.49302 -1.3118,0.48253 -2.0303,1.24493 -0.4475,0.99011 -0.8026,1.04452 -0.7439,2.16152 1.0438,0.63048 1.5548,0.31112 1.7851,1.28681 0.1518,0.6431 -0.5556,0.65496 -0.3895,1.47289 1.4134,0.27298 1.6311,0.34768 3.0698,0.62427 -0.3866,0.60051 -0.7259,0.79982 -1.6491,1.5252 -0.5217,1.19037 0.813,1.48241 1.4917,2.70896 0.1821,0.7 -0.083,1.3953 -0.6129,2.37877 1.9094,2.01039 3.5434,2.08566 2.9128,3.52639 -1.5948,0.40602 -1.9963,0.0674 -3.4177,-0.32544 -0.5949,-0.38683 -0.5716,-0.84153 -0.7451,-1.03743 -0.5795,-0.65431 -1.2239,-0.77762 -1.5896,-0.91946 -1.0397,-0.99517 -0.5324,-0.69784 -1.149,-1.70047 z">
			<title>Azad Jammu and Kashmir</title>
		</path>
	</g>

Goal:
{
  "countries": [
    {
      "id": "ve",
      "name": "Venezuela, Bolivarian Republic of",
      "paths": [
        {
          "id": "Venezuela_mainland",
          "d": "m 742.20,619.18 c ... [truncated for brevity]"
        },
        {
          "id": "path3412",
          "d": "m 834.22,625.23 c ... [truncated for brevity]"
        },
        // ... other path elements for Venezuela
      ]
    },
*/

//$text = file_get_contents('BlankMapWorld.svg');
//$text = file_get_contents('Singapore.svg');
//$text = file_get_contents('Sudan.svg');
$text = file_get_contents('Pakistan.svg');
$lines = explode("\n", $text);
$output = '';
$count = 0;
$path_count = 0;
$paths = null;
$g_found = false;
$end_country = false;
$map = [];
$country = new stdClass();
foreach ($lines as $line){
  $count++;
  // this is the header area
 // if ($count < 160){
  //  continue;
  //}
  $line = trim($line);
  if (strpos($line, '<g') !== false){
    $g_found = true;
    $path_count = 0;
    $paths = null;
    $country->id = findId($line);
    $country->countryCode = strtoupper($country->id);
    $country->class = findClass($line);
  }
  elseif (strpos($line, '</g') !== false) {
    if ($g_found == false){
       $end_country = true;
    }

  }
  elseif (strpos($line, '<path') !== false){
    $path_count++;
    $paths[] = addPath($line);
    // for <path id="ocean" class="oceanxx" d="m 2178.51,22.65,11""
    /*if ($g_found == false){
      if ($path_count == 1){
        $end_country = true;
      }
    }
    */
  }
  elseif (strpos($line, '<title') !== false){
    if (!isset($country->countryName)){
      $country->countryName = findTitle($line);
    }
  }
  if (strpos($line, '</path') !== false){
    $end_country = true;
  }
  if ($end_country == true){
    $country->paths = $paths;
    if (!isset($country->id)){
      if (isset($paths[0]->id)){
        $country->id = $paths[0]->id;
        $country->CountryCode = strtoupper($country->id);
      }
    }
    if (isset($country->id)){
      $map[] = $country;
    }
    $country = new stdClass();
    $paths = [];
    $path_count = 0;
    $g_found = false;
    $end_country = false;
  }
}
print_r(json_encode($map));


function findId($line){
  $pos_start = strpos($line, 'id="') + 4;
  $pos_end = strpos($line, '"', $pos_start);
  $str_len = $pos_end - $pos_start;
  $id = substr($line, $pos_start, $str_len );
  return $id;
}
function findClass($line){
  $class = null;
  $pos_start = strpos($line, 'class="');
  if ($pos_start !== false){
    $pos_start = $pos_start + 7;
    $pos_end = strpos($line, '"', $pos_start);
    $str_len = $pos_end - $pos_start;
    $class = substr($line, $pos_start, $str_len );
  }
  return $class;
}
function findTitle($line){
  $bad = array('<title>', '</title>');
  $title = str_replace($bad, null, $line);
  return $title;
}
/*	<path id="path2528" d="m 2324.91,732.51 c -0.51,0.321 -0.37,0.561 0.43,0.72 -0.15,-0.24 -0.29,-0.48 -0.43,-0.72"/>
{
  "id": "Venezuela_mainland",
  "d": "m 742.20,619.18 c ... [truncated for brevity]"
},
*/
function addPath($line){
  // find id
  $pos_id_start = strpos($line, 'id="') + 4 ;
  $pos_id_end = strpos($line, '"', $pos_id_start);
  $len = $pos_id_end - $pos_id_start;
  $id = substr($line, $pos_id_start, $len);
  //get rid of all small islands
  if (preg_match('/^path\d+$/', $id)){
    return null;
  }
  // find class
  $class = null;
  $pos_class_start = strpos($line, 'class="') ;
  if ($pos_class_start !== false){
    $pos_class_start = $pos_class_start + 7;
    $pos_class_end = strpos($line, '"', $pos_class_start);
    $len = $pos_class_end - $pos_class_start;
    $class = substr($line, $pos_class_start, $len);
  }
  //  find d
  $pos_d_start = strpos($line, 'd="', $pos_id_end) + 3 ;
  $pos_d_end = strpos($line, '"', $pos_d_start);
  $len = $pos_d_end - $pos_d_start;
  $d = substr($line, $pos_d_start, $len);
  $path = new stdClass();
  $path->id = $id;
  $path->class = $class;
  $path->d = $d;
  return $path;
}

